rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to validate expense data
    function isValidExpense() {
      let incomingData = request.resource.data;
      return incomingData.description is string &&
             incomingData.description.size() > 0 &&
             incomingData.amount is number &&
             incomingData.amount > 0 &&
             incomingData.category in ['food', 'transport', 'entertainment', 'bills', 'shopping', 'health', 'other'] &&
             incomingData.userId == request.auth.uid &&
             incomingData.createdAt is timestamp &&
             incomingData.updatedAt is timestamp;
    }

    // Expenses collection rules
    match /expenses/{expenseId} {
      // Allow read if user is authenticated and owns the document
      allow read: if isAuthenticated() && 
                   (resource == null || resource.data.userId == request.auth.uid);
      
      // Allow create if user is authenticated and sets their own userId
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.amount is number &&
                   request.resource.data.amount > 0 &&
                   request.resource.data.category is string;
      
      // Allow update if user owns the document
      allow update: if isOwner(resource.data.userId);
      
      // Allow delete if user owns the document
      allow delete: if isOwner(resource.data.userId);
    }

    // Categories collection rules
    match /categories/{categoryId} {
      // Allow read if user is authenticated and owns the document
      allow read: if isOwner(resource.data.userId);
      
      // Allow create if user is authenticated and sets their own userId
      allow create: if isAuthenticated() && 
                    request.resource.data.userId == request.auth.uid;
      
      // Allow update if user owns the document
      allow update: if isOwner(resource.data.userId) &&
                    request.resource.data.userId == request.auth.uid;
      
      // Allow delete if user owns the document
      allow delete: if isOwner(resource.data.userId);
    }
  }
} 